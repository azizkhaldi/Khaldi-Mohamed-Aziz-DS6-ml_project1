name: ML Project CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  data_preprocessing:
    name: Data Preprocessing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run data preprocessing script
        run: |
          python scripts/data_preprocessing.py

  model_training:
    name: Model Training
    runs-on: ubuntu-latest
    needs: data_preprocessing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Train model
        run: |
          python scripts/train_model.py

  testing:
    name: Run Unit & Functional Tests
    runs-on: ubuntu-latest
    needs: [data_preprocessing, model_training]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest  # Installation de pytest

      - name: Run unit tests
        run: |
          pytest tests/unit/

      - name: Run functional tests
        run: |
          pytest tests/functional/

  notify_success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [data_preprocessing, model_training, testing]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Static success step
        run: |
          echo "The pipeline has completed successfully!"

